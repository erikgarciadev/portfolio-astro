---
import LogoIcon from "./icons/LogoIcon.astro";

const navItems = [
  // {
  //   title: "Experiencia",
  //   label: "experiencia",
  //   url: "/#experiencia",
  // },
  {
    title: "Proyectos",
    label: "proyectos",
    id: "projects",
    url: "/#projects",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    id: "about",
    url: "/#about",
  },
  // {
  //   title: "Contacto",
  //   label: "contacto",
  //   url: "mailto:miduga@gmail.com",
  // },
];
---

<header
  class="fixed top-0 z-10 flex items-center justify-between mt-2 mx-auto w-full px-3 md:px-8 lg:w-full"
>
  <nav
    class="max-w-[1024px] w-full mx-auto flex items-center justify-between text-sm rounded-full text-gray-600 py-1 gap-4"
  >
    <LogoIcon class="size-8 lg:size-10" />

    <div class="flex">
      {
        navItems.map((link) => (
          <a
            class="relative block px-2 py-2 transition hover:text-(--primary) dark:hover:text-blue-500"
            aria-label={link.label}
            data-id={link.id}
            href={link.url}
          >
            {link.title}
          </a>
        ))
      }
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("data-id") == entry.target.id) {
              item.classList.add("text-(--primary)");
            } else {
              item.classList.remove("text-(--primary)");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.8,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadow-light 1s ease-in-out forwards;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    /* @apply dark:bg-gray-800/90 bg-white/50; */
    background-color: #ffffff50;
  }

  @media (prefers-color-scheme: dark) {
    nav {
      animation: nav-shadow-dark 1s ease-in-out forwards;
      animation-timeline: scroll();
      animation-range: 0 100px;
    }
  }

  @keyframes nav-shadow-light {
    0% {
      background-color: rgba(255, 255, 255, 0);
    }
    to {
      background-color: rgba(255, 255, 255, 0.5);
      max-width: 640px;
      padding-inline: 0.75rem;
      --tw-backdrop-blur: blur(8px);
      -webkit-backdrop-filter: var(--tw-backdrop-blur,)
        var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
        var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
        var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
        var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
        var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-white) /* #fff = #ffffff */ 10%,
        transparent
      );
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
        calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @keyframes nav-shadow-dark {
    0% {
      background-color: rgba(31, 41, 55, 0); /* gray-800/0 */
    }
    to {
      background-color: rgba(31, 41, 55, 0.9); /* gray-800/90 */
      max-width: 640px;
      padding-inline: 0.75rem;
      --tw-backdrop-blur: blur(8px);
      -webkit-backdrop-filter: var(--tw-backdrop-blur,)
        var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
        var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
        var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
        var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
        var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-white) /* #fff = #ffffff */ 10%,
        transparent
      );
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
        calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
</style>
